Rachel, exercise 5

######################### All this from the github exercise page #####################

# new directory
mkdir ~/exercise5
cd ~/exercise5

# soft link to previous files from exercise 2, checking they are indeed there
ln -s ~/fastq/*.fastq ./
ls -l

# download Swiss-Prot database
wget ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz

# unzip mass of files
gunzip uniprot_sprot.fasta.gz

# necessary for searching by sequence identifier
makeblastdb -in uniprot_sprot.fasta -out uniprot_sprot -dbtype prot -hash_index -parse_seqids 

# use script from exercise2 to format sequences from fastq to fasta, or awk from Eric
awk 'BEGIN{P=1}{if(P==1||P==2){gsub(/^[@]/,">");print}; if(P==4)P=0; P++}' SRR6004925_1.fastq > mysequences.fasta

# command to run BlastX
blastx -query mysequences.fasta -db uniprot_sprot -out blastx_output.csv -outfmt 6 &    



## Switch over to DIAMOND (which can be much faster)

# download DIAMOND from github  
wget https://github.com/bbuchfink/diamond/releases/download/v0.9.18/diamond-linux64.tar.gz
tar xzf diamond-linux64.tar.gz

# add diamond to a path
PATH=$PATH:`pwd`

# makes a DIAMOND-formatted version of Swiss-Prot database
./diamond makedb --in uniprot_sprot.fasta -d uniprot_sprot

# runs the DIAMOND-equivalent of BlastX, using fastq files
./diamond blastx -d uniprot_sprot -q SRR6004925_1.fastq -a diamond_output

# DIAMOND output requires a certain view command to see in BLAST-equivalent
./diamond view -a diamond_output.daa -o diamond_output.csv

# save column 2 to a new file
cut -f2 diamond_output.csv > diamond_acc.txt

# 'blastdbcmd' indicates a list of accessions
blastdbcmd -db uniprot_sprot -entry_batch diamond_acc.txt -out diamond_output.txt -outfmt '%t'


################################ Homework ########################################

# list all proteins in Swiss-Prot database that have matches in the metagenomic dataset with e-values less than 1e-10 along with their annotations. (E-values in column 12)

# paste together dataset with annotations.
paste diamond_output.csv diamond_output.txt > diamond_combined.csv

# check new file
head diamond_combined

# list proteins with e-value less than 1e-10 (e-values in column 11). Prints out protein (column 1), e-value, annotation.
cat diamond_combined.csv | awk '{ if ($11 <= 1e-10) print $1,$11,$13}' > diamond_homework    # spaces between each column

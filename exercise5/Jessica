#Make a new directory called exercise5 #Go to this directory
mkdir ~/exercise5
cd ~/exercise5

#create soft link to sequences from exercise 2, #Check to see if the sequences are there. 
ln -s ~/fastq/*.fastq ./
ls -l 

# download Swiss-Prot database by ftp, #unzip
wget ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz 
gunzip uniprot_sprot.fasta.gz

# make a BLAST-formatted version of the Swiss-Prot database 
# -parse_seqids to make database searchable by sequence identifier 
makeblastdb -in uniprot_sprot.fasta -out uniprot_sprot -dbtype prot -hash_index -parse_seqids 

#use awk to format from fastq to fasta
awk 'BEGIN{P=1}{if(P==1||P==2){gsub(/^[@]/,">");print}; if(P==4)P=0; P++}' SRR5170066_1.fastq > mysequences.fasta

# run BlastX
blastx -query mysequences.fasta -db uniprot_sprot -out blastx_output.csv -outfmt 6 & 

# download DIAMOND from github  
wget https://github.com/bbuchfink/diamond/releases/download/v0.9.18/diamond-linux64.tar.gz
tar xzf diamond-linux64.tar.gz

# add DIAMOND to PATH 
PATH=$PATH:`pwd`

# make a DIAMOND-formatted version of Swiss-Prot database
./diamond makedb --in uniprot_sprot.fasta -d uniprot_sprot

# DIAMOND-equivalent of running BLASTX -- FASTQ files
./diamond blastx -d uniprot_sprot -q SRR3150066_1.fastq -a diamond_output

# see in BLAST-equivalent
./diamond view -a diamond_output.daa -o diamond_output.csv

# save column 2 to a new file
cut -f2 diamond_output.csv > diamond_acc.txt

# 'blastdbcmd' indicates a list of accessions
blastdbcmd -db uniprot_sprot -entry_batch diamond_acc.txt -out diamond_output.txt -outfmt '%t'

# paste together dataset with annotations.
paste diamond_output.csv diamond_output.txt > diamond_combined.csv

# list proteins with e-value less than 1e-10 (e-values in column 11). Prints out protein (column 1), e-value, annotation.
cat diamond_combined.csv | awk '{ if ($11 <= 1e-10) print $1,$11,$13}' > diamond_homework    # spaces between each column
